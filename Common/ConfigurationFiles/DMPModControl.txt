#You can comment by starting a line with a #, these are ignored by the server.
#Commenting will NOT work unless the line STARTS with a '#'.
#You can also indent the file with tabs or spaces.
#Sections supported are required-files, optional-files, partslist, resource-blacklist and resource-whitelist.
#The client will be required to have the files found in required-files, and they must match the SHA hash if specified (this is where part mod files and play-altering files should go, like KWRocketry or Ferram Aerospace Research#The client may have the files found in optional-files, but IF they do then they must match the SHA hash (this is where mods that do not affect other players should go, like EditorExtensions or part catalogue managers
#You cannot use both resource-blacklist AND resource-whitelist in the same file.
#resource-blacklist bans ONLY the files you specify
#resource-whitelist bans ALL resources except those specified in the resource-whitelist section OR in the SHA sections. A file listed in resource-whitelist will NOT be checked for SHA hash. This is useful if you want a mod that modifies files in its own directory as you play.
#Each section has its own type of formatting. Examples have been given.
#Sections are defined as follows:

!required-files
#To generate the SHA256 of a file you can use a utility such as this one: http://hash.online-convert.com/sha256-generator (use the 'hex' string), or use sha256sum on linux.
#File paths are read from inside GameData.
#If there is no SHA256 hash listed here (i.e. blank after the equals sign or no equals sign), SHA matching will not be enforced.
#You may not specify multiple SHAs for the same file. Do not put spaces around equals sign. Follow the example carefully.
#Syntax:
#[File Path]=[SHA] or [File Path]
#Example: MechJeb2/Plugins/MechJeb2.dll=B84BB63AE740F0A25DA047E5EDA35B26F6FD5DF019696AC9D6AF8FC3E031F0B9
#Example: MechJeb2/Plugins/MechJeb2.dll
{required-files}


!optional-files
#Formatting for this section is the same as the 'required-files' section
{optional-files}


{whitelist-blacklist}
#Only select one of these modes.
#Resource blacklist: clients will be allowed to use any dll's, So long as they are not listed in this section
#Resource whitelist: clients will only be allowed to use dll's listed here or in the 'required-files' and 'optional-files' sections.
#Syntax:
#[File Path]
#Example: MechJeb2/Plugins/MechJeb2.dll
{whitelist-blacklist-files}


!partslist
#This is a list of parts to allow users to put on their ships.
#If a part the client has doesn't appear on this list, they can still join the server but not use the part.
#The default stock parts have been added already for you.
#To add a mod part, add the name from the part's .cfg file. The name is the name from the PART{} section, where underscores are replaced with periods.
#[partname]
#Example: mumech.MJ2.Pod (NOTE: In the part.cfg this MechJeb2 pod is named mumech_MJ2_Pod. The _ have been replaced with .)
#You can use this application to generate partlists from a KSP installation if you want to add mod parts: http://forum.kerbalspaceprogram.com/threads/57284 
{partslist}
